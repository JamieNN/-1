body{
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0;
    background-image:url("图片.jpg");
}
#restart{
position: fixed;
    right:70px;
    top:80px;
    background-color: #83179e;
    border: none;
    color: white;
    padding: 15px 32px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 2em;
    margin: 4px 2px;
    cursor: pointer;
}





#game{
    width: 100vw;
    height:100vh;


    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    position: relative;
    width: fit-content;
    align-items:fit-content;
}
.banner{
    margin-top: 20px;
    font-size: 2em;
    height: 1.5em;
}
.welcome button{
    background-color: rgb(219, 221, 75);
    color:rgb(17, 180, 245);
    font-size: 2em;
    text-align: center;
    letter-spacing: 0.5em;
    border-radius: 5px;



}
table {
    
} 
td {
    border:blueviolet 1px solid; 
    width: 20px;
    height: 20px;
    background-color:rgb(189, 123, 219);
    box-sizing: border-box;
    position: relative;
    padding:0;

}



td > .cell{
    position: absolute;
    left: 0;
    right: 0 ;
    top: 0;
    bottom: 0;
    text-align: center;
    color:rgb(189, 123, 219);
      
    
}
td>.cell.clear{
    background-color: #ffffff;
    color:rgb(26, 178, 184);
}
td>.cell.exploded{
    background-color: red;
    color: #999;
}
table.exploded,table.exploded td{
    background-color: red;
}
.loser{
    position: absolute;
    background-color:rgb(189, 123, 219);
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;

}
.winner{
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color:rgb(189, 123, 219) ;

    text-align: center;
    color:blanchedalmond;
    width: 100%;
    height: 100%;

}
.loser h3{
    font-size: 3em;
}
.welcome{
    display: flex;
    flex-direction: column;

}
.welcome button{
    margin: 20px;;
}
#over {color:red;
    position: absolute;
    font-size: 2em;
    top: 100;
text-align: center;
}


#advance:hover{
    color: rgb(138, 56, 211);
    background-color: #591d75;
}

#restart:hover{
    color: rgb(138, 56, 211);
    background-color: #591d75;
}

#level0:hover{
    color: rgb(138, 56, 211);
    background-color: #591d75;
}

#leve20:hover{
    color: rgb(138, 56, 211);
    background-color: #591d75;
}



#restart::before,
#restart::after {
	/* 将两个伪元素的相同部分写在一起 */
	content: "";
	position: absolute;
	width: 20px;
	height: 20px;
	border: 2px solid aqua;
	/* 最后的.3s是延迟时间 */
	transition: all 0.3s ease-in-out 0.3s;
}
#restart::before {
	top: 0;
	left: 0;
	/* 删除左边的伪元素的右和下边框 */
	border-right: 0;
	border-bottom: 0;
}
#restart::after {
	right: 0;
	bottom: 0;
	/* 删除右边的伪元素的上边和左边的边框 */
	border-top: 0;
	border-left: 0;
}
#restart:hover {
	background-color: aqua;
	color: #000;
	/* 加个发光效果和下面的倒影 */
	/* 模糊度加到了50px */
	box-shadow: 0 0 50px aqua;
	/* below 是下倒影 1px是倒影的元素相隔的距离 最后是个渐变的颜色 */
	-webkit-box-reflect: below 1px
		linear-gradient(transparent, rgba(0, 0, 0, 0.3));
	/* 设置一下以上属性的延迟时间 */
	transition-delay: 0.4s;
}
/* 在设置两条线的变化 总体来说四条各个方向的 只需要改变一下两个伪元素的宽度和高度 */
#restart:hover::before,
#restart:hover::after {
	width: 138px;
	height: 58px;
	transition-delay: 0s;
}







* {
	/* 初始化 清除页面元素的内外边距 */
	padding: 0;
	margin: 0;
}
body {
	/* 弹性布局 让页面元素垂直+水平居中 */
	display: flex;
	justify-content: center;
	align-items: center;
	/* 让页面始终占浏览器可视区域高度 */
	height: 100vh;
	/* 背景颜色 径向渐变 */
}
/* 定义一下几个盒子相同的部分 */
.circle {
	/* 圆形 */
	border-radius: 50%;
}
.center {
	position: absolute;
	top: 50%;
	left: 50%;
	/* 元素走自身高度/宽度 的一半 */
	transform: translate(-50%, -50%);
}
.container {
	/* 相对定位 */
	position: relative;
	width: 300px;
	height: 300px;
	border: 1px solid rgb(18, 20, 20);
	background-color: #384c50;
	/* 盒子阴影 默认是外部阴影 写了inset 就是内部阴影 */
	box-shadow: 0 0 32px 8px rgb(18, 20, 20), 0 0 4px 1px rgb(18, 20, 20) inset;
}
.container .box1 {
	width: 238px;
	height: 238px;
	background-color: rgb(22, 26, 27);
	box-shadow: 0 0 4px 1px #52fefe;
}
.container .box2 {
	width: 220px;
	height: 220px;
	background-color: #fff;
	box-shadow: 0 0 5px 1px #52fefe, 0 0 5px 4px #52fefe inset;
}
.container .box3 {
	width: 180px;
	height: 180px;
	background-color: #073c4b;
	box-shadow: 0 0 5px 4px #52fefe, 0 0 6px 2px #52fefe inset;
}
.container .box4 {
	width: 120px;
	height: 120px;
	border: 1px solid #52fefe;
	background-color: #fff;
	box-shadow: 0 0 2px 1px #52fefe, 0 0 10px 5px #52fefe inset;
}
.container .box5 {
	width: 70px;
	height: 70px;
	border: 5px solid #1b4e5f;
	box-shadow: 0 0 7px 5px #52fefe, 0 0 10px 10px #52fefe inset;
}
.container .box6 {
	position: relative;
	width: 100%;
	height: 100%;
	/* 动画 名称 时长 linear 是匀速运动 infinite是无限次播放 */
	animation: rotate 3s linear infinite;
}
.container .box6 .coil {
	position: absolute;
	width: 30px;
	height: 20px;
	/* calc方法自动计算位移距离 */
	top: calc(50% - 110px);
	left: calc(50% - 15px);
	background-color: #073c4b;
	box-shadow: 0 0 5px #52fefe inset;
	/* calc方法自动计算数值 var函数调用了我们刚刚给元素定义的--i属性值 然后分别乘以45度 算出各自的度数 */
	transform: rotate(calc(var(--i) * 45deg));
	/* 这个是旋转的中心 */
	transform-origin: center 110px;
}
/* 定义一下旋转动画 */
@keyframes rotate {
	0% {
		transform: rotate(0);
	}
	100% {
		transform: rotate(360deg);
	}
}